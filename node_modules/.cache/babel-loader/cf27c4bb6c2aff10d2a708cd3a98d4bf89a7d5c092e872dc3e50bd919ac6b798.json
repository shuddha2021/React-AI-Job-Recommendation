{"ast":null,"code":"var _jsxFileName = \"/Users/shuddha/Desktop/hello123-main/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const botName = \"JobBot\"; // Name of the chatbot\n\n  const chatbotRef = useRef(null);\n  const addMessage = function (text) {\n    let isUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    setMessages(prevMessages => [...prevMessages, {\n      text,\n      isUser,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n  useEffect(() => {\n    // Welcome message from the chatbot\n    addMessage(`Hello! I'm ${botName}, your job application assistant. How can I help you?`);\n  }, []);\n  const handleUserMessage = () => {\n    if (inputValue.trim() === \"\") return;\n    addMessage(inputValue, true);\n    // Implement logic to handle user input (e.g., answer questions, provide tips, etc.)\n    setInputValue(\"\");\n  };\n  useEffect(() => {\n    // Scroll chat to the bottom when new messages are added\n    chatbotRef.current.scrollTop = chatbotRef.current.scrollHeight;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    style: {\n      position: \"fixed\",\n      bottom: \"20px\",\n      right: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: botName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      ref: chatbotRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"SLWSqrfZdf/x/21pX3tf1aJfkNA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputValue","setInputValue","botName","chatbotRef","addMessage","text","isUser","arguments","length","undefined","prevMessages","timestamp","Date","toISOString","handleUserMessage","trim","current","scrollTop","scrollHeight","className","style","position","bottom","right","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shuddha/Desktop/hello123-main/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction Chatbot() {\n    const [messages, setMessages] = useState([]);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const botName = \"JobBot\"; // Name of the chatbot\n\n    const chatbotRef = useRef(null);\n\n    const addMessage = (text, isUser = false) => {\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { text, isUser, timestamp: new Date().toISOString() },\n        ]);\n    };\n\n    useEffect(() => {\n        // Welcome message from the chatbot\n        addMessage(`Hello! I'm ${botName}, your job application assistant. How can I help you?`);\n    }, []);\n\n    const handleUserMessage = () => {\n        if (inputValue.trim() === \"\") return;\n        addMessage(inputValue, true);\n        // Implement logic to handle user input (e.g., answer questions, provide tips, etc.)\n        setInputValue(\"\");\n    };\n\n    useEffect(() => {\n        // Scroll chat to the bottom when new messages are added\n        chatbotRef.current.scrollTop = chatbotRef.current.scrollHeight;\n    }, [messages]);\n\n    return (\n        <div className=\"chatbot\" style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}>\n            <div className=\"chatbot-header\">{botName}</div>\n            <div className=\"chatbot-messages\" ref={chatbotRef}>\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.isUser ? \"user\" : \"bot\"}`}>\n                        <span className=\"message-text\">{message.text}</span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"chatbot-input\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Type your message...\"\n                />\n                <button onClick={handleUserMessage}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,OAAO,GAAG,QAAQ,CAAC,CAAC;;EAE1B,MAAMC,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMW,UAAU,GAAG,SAAAA,CAACC,IAAI,EAAqB;IAAA,IAAnBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IACpCR,WAAW,CAAEW,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;MAAEL,IAAI;MAAEC,MAAM;MAAEK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC,CACxD,CAAC;EACN,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZ;IACAY,UAAU,CAAE,cAAaF,OAAQ,uDAAsD,CAAC;EAC5F,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAId,UAAU,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC9BX,UAAU,CAACJ,UAAU,EAAE,IAAI,CAAC;IAC5B;IACAC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZ;IACAW,UAAU,CAACa,OAAO,CAACC,SAAS,GAAGd,UAAU,CAACa,OAAO,CAACE,YAAY;EAClE,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKwB,SAAS,EAAC,SAAS;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjF7B,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAK,QAAA,EAAEtB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/CjC,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAACU,GAAG,EAAE1B,UAAW;MAAAqB,QAAA,EAC7C1B,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBrC,OAAA;QAAiBwB,SAAS,EAAG,WAAUY,OAAO,CAACzB,MAAM,GAAG,MAAM,GAAG,KAAM,EAAE;QAAAkB,QAAA,eACrE7B,OAAA;UAAMwB,SAAS,EAAC,cAAc;UAAAK,QAAA,EAAEO,OAAO,CAAC1B;QAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD9CI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNjC,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAK,QAAA,gBAC1B7B,OAAA;QACIsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElC,UAAW;QAClBmC,QAAQ,EAAGC,CAAC,IAAKnC,aAAa,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAsB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFjC,OAAA;QAAQ4C,OAAO,EAAEzB,iBAAkB;QAAAU,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/B,EAAA,CArDQD,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AAuDhB,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}