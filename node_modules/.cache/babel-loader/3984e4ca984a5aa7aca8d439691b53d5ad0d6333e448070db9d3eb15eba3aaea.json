{"ast":null,"code":"var _jsxFileName = \"/Users/shuddha/Desktop/YC/your-app-name/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport JobList from \"./JobList.js\";\nimport JobDetails from \"./JobDetails.js\";\nimport MaterialList from \"./MaterialList.js\";\nimport MaterialDetails from \"./MaterialDetails.js\";\nimport MatchList from \"./MatchList.js\";\nimport FeedbackList from \"./FeedbackList.js\";\nimport FeedbackDetails from \"./FeedbackDetails.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showNextSteps, setShowNextSteps] = useState(false);\n  const handleApplyNow = () => {\n    setShowNextSteps(true);\n  };\n\n  // Define state variables for the selected job and the match percentage\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [match, setMatch] = useState(0);\n\n  // Define a function to handle job selection\n  const handleJobSelect = job => {\n    setSelectedJob(job); // Update state variable with selected job\n    setMatch(Math.floor(Math.random() * 100) + 1); // Update state variable with random match percentage\n  };\n\n  // Define some dummy jobs as an array of objects\n  const jobs = [\n    // ...dummy job data\n  ];\n\n  // Define state variables for the selected material and the show materials flag\n  const [selectedMaterial, setSelectedMaterial] = useState(null);\n  const [showMaterials, setShowMaterials] = useState(false);\n\n  // Define a function to handle generate materials button click\n  const handleGenerateMaterials = () => {\n    setShowMaterials(true);\n  };\n\n  // Define a function to handle material selection\n  const handleMaterialSelect = material => {\n    setSelectedMaterial(material); // Update state variable with selected material\n  };\n\n  // Define some dummy materials as an array of objects\n  const materials = [\n    // ...dummy material data\n  ];\n\n  // Define state variables for the feedback data and the show feedback flag\n  const [feedback, setFeedback] = useState([]);\n  const [showFeedback, setShowFeedback] = useState(false);\n\n  // Define a function to handle get feedback button click\n  const handleGetFeedback = () => {\n    setShowFeedback(true);\n    // Fetch some dummy feedback data from an API or a mock file\n    // For simplicity, we will use a mock file called feedback.json\n    fetch(\"./feedback.json\").then(response => response.json()).then(data => {\n      // Update state variable with feedback data\n      setFeedback(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  // Define a function to handle feedback selection\n  const handleFeedbackSelect = feedback => {\n    setSelectedFeedback(feedback); // Update state variable with selected feedback\n  };\n\n  // ...rest of the code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showNextSteps && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-steps\",\n      children: showMaterials && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Get Expert Feedback and Advice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Receive personalized feedback and advice from industry experts on your application materials and interview skills.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetFeedback,\n          children: \"Get Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lW8f1jJN6rYkFnp/oqhkkEA+O5k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","JobList","JobDetails","MaterialList","MaterialDetails","MatchList","FeedbackList","FeedbackDetails","jsxDEV","_jsxDEV","App","_s","showNextSteps","setShowNextSteps","handleApplyNow","selectedJob","setSelectedJob","match","setMatch","handleJobSelect","job","Math","floor","random","jobs","selectedMaterial","setSelectedMaterial","showMaterials","setShowMaterials","handleGenerateMaterials","handleMaterialSelect","material","materials","feedback","setFeedback","showFeedback","setShowFeedback","handleGetFeedback","fetch","then","response","json","data","catch","error","console","handleFeedbackSelect","setSelectedFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shuddha/Desktop/YC/your-app-name/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport JobList from \"./JobList.js\";\nimport JobDetails from \"./JobDetails.js\";\nimport MaterialList from \"./MaterialList.js\";\nimport MaterialDetails from \"./MaterialDetails.js\";\nimport MatchList from \"./MatchList.js\";\nimport FeedbackList from \"./FeedbackList.js\";\nimport FeedbackDetails from \"./FeedbackDetails.js\";\n\nfunction App() {\n    const [showNextSteps, setShowNextSteps] = useState(false);\n\n    const handleApplyNow = () => {\n        setShowNextSteps(true);\n    };\n\n    // Define state variables for the selected job and the match percentage\n    const [selectedJob, setSelectedJob] = useState(null);\n    const [match, setMatch] = useState(0);\n\n    // Define a function to handle job selection\n    const handleJobSelect = (job) => {\n        setSelectedJob(job); // Update state variable with selected job\n        setMatch(Math.floor(Math.random() * 100) + 1); // Update state variable with random match percentage\n    };\n\n    // Define some dummy jobs as an array of objects\n    const jobs = [\n        // ...dummy job data\n    ];\n\n    // Define state variables for the selected material and the show materials flag\n    const [selectedMaterial, setSelectedMaterial] = useState(null);\n    const [showMaterials, setShowMaterials] = useState(false);\n\n    // Define a function to handle generate materials button click\n    const handleGenerateMaterials = () => {\n        setShowMaterials(true);\n    };\n\n    // Define a function to handle material selection\n    const handleMaterialSelect = (material) => {\n        setSelectedMaterial(material); // Update state variable with selected material\n    };\n\n    // Define some dummy materials as an array of objects\n    const materials = [\n        // ...dummy material data\n    ];\n\n    // Define state variables for the feedback data and the show feedback flag\n    const [feedback, setFeedback] = useState([]);\n    const [showFeedback, setShowFeedback] = useState(false);\n\n    // Define a function to handle get feedback button click\n    const handleGetFeedback = () => {\n        setShowFeedback(true);\n        // Fetch some dummy feedback data from an API or a mock file\n        // For simplicity, we will use a mock file called feedback.json\n        fetch(\"./feedback.json\")\n            .then((response) => response.json())\n            .then((data) => {\n                // Update state variable with feedback data\n                setFeedback(data);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n\n    // Define a function to handle feedback selection\n    const handleFeedbackSelect = (feedback) => {\n        setSelectedFeedback(feedback); // Update state variable with selected feedback\n    };\n\n    // ...rest of the code...\n\n    return (\n        <div className=\"App\">\n            {/* ...previous code... */}\n\n            {showNextSteps && (\n                <div className=\"next-steps\">\n                    {/* ...previous code... */}\n\n                    {showMaterials && (\n                        <div className=\"step\">\n                            <h3>Get Expert Feedback and Advice</h3>\n                            <p>\n                                Receive personalized feedback and advice from\n                                industry experts on your application\n                                materials and interview skills.\n                            </p>\n                            <button onClick={handleGetFeedback}>\n                                Get Feedback\n                            </button>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}