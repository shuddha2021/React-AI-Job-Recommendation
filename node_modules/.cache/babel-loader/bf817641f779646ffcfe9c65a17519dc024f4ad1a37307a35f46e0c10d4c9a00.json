{"ast":null,"code":"var _jsxFileName = \"/Users/shuddha/Desktop/hello123-main/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [chatbotVisible, setChatbotVisible] = useState(true); // State to track chatbot visibility\n\n  const botName = \"JobBot\"; // Name of the chatbot\n\n  const chatbotRef = useRef(null);\n\n  // ...\n\n  const handleMinimize = () => {\n    setChatbotVisible(prevState => !prevState); // Toggle chatbot visibility\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot ${chatbotVisible ? \"visible\" : \"hidden\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [botName, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"minimize-button\",\n        onClick: handleMinimize,\n        children: chatbotVisible ? \"Minimize\" : \"Maximize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), chatbotVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        ref: chatbotRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"mXTg8NPjw9of1PVu7Y7jANYEjy0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","inputValue","setInputValue","chatbotVisible","setChatbotVisible","botName","chatbotRef","handleMinimize","prevState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/shuddha/Desktop/hello123-main/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction Chatbot() {\n    const [messages, setMessages] = useState([]);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [chatbotVisible, setChatbotVisible] = useState(true); // State to track chatbot visibility\n\n    const botName = \"JobBot\"; // Name of the chatbot\n\n    const chatbotRef = useRef(null);\n\n    // ...\n\n    const handleMinimize = () => {\n        setChatbotVisible((prevState) => !prevState); // Toggle chatbot visibility\n    };\n\n    return (\n        <div className={`chatbot ${chatbotVisible ? \"visible\" : \"hidden\"}`}>\n            <div className=\"chatbot-header\">\n                {botName}\n                <button className=\"minimize-button\" onClick={handleMinimize}>\n                    {chatbotVisible ? \"Minimize\" : \"Maximize\"}\n                </button>\n            </div>\n            {chatbotVisible && (\n                <>\n                    <div className=\"chatbot-messages\" ref={chatbotRef}>\n                        {/* Messages content */}\n                    </div>\n                    <div className=\"chatbot-input\">\n                        {/* Input field and send button */}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAMe,OAAO,GAAG,QAAQ,CAAC,CAAC;;EAE1B,MAAMC,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;;EAE/B;;EAEA,MAAMe,cAAc,GAAGA,CAAA,KAAM;IACzBH,iBAAiB,CAAEI,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED,oBACId,OAAA;IAAKe,SAAS,EAAG,WAAUN,cAAc,GAAG,SAAS,GAAG,QAAS,EAAE;IAAAO,QAAA,gBAC/DhB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC1BL,OAAO,eACRX,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACE,OAAO,EAAEJ,cAAe;QAAAG,QAAA,EACvDP,cAAc,GAAG,UAAU,GAAG;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACLZ,cAAc,iBACXT,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACIhB,OAAA;QAAKe,SAAS,EAAC,kBAAkB;QAACO,GAAG,EAAEV;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7C,CAAC,eACNrB,OAAA;QAAKe,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CAnCQD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}